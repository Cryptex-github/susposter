name: Release

on: push

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9.x"
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: poetry-venv-${{ runner.os }}-${{ steps.python-version.outputs.version }}
      - name: Install/update package and dependencies
        run: poetry install
      - name: Create release ${{ steps.tag.outputs.tag }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          draft: "false"
          prerelease: "false"
      - name: Build and publish to PyPi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish --build
